{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "index.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "types.d.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "xtal-fig-diamond.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "XtalFigDiamond",
          "cssParts": [
            {
              "description": "path element that fills in the diamond",
              "name": "diamond-fill"
            },
            {
              "description": "path element that adds a border to the diamond",
              "name": "diamond-border"
            },
            {
              "description": "= foreignObject element inside of which slot goes",
              "name": "inner"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "is",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'xtal-fig-diamond'"
            },
            {
              "kind": "field",
              "name": "self",
              "default": "this"
            },
            {
              "kind": "field",
              "name": "propActions",
              "default": "[\n    xp.manageMainTemplate,\n    ({ domCache, width, height }) => [{\n            [refs.svgElement]: [, , { width: width, height: height }]\n        }],\n    ({ domCache, width, strokeWidth, height }) => [{\n            [refs.pathElements]: [, , { d: `M ${width / 2},${strokeWidth} L ${strokeWidth},${height / 2} L ${width / 2},${height - strokeWidth} L ${width - strokeWidth},${height / 2} L ${width / 2},${strokeWidth} z`, }],\n        }],\n    ({ domCache, strokeWidth }) => [{\n            [refs.diamondBorderPart]: [{ style: { strokeWidth: strokeWidth } }],\n        }],\n    ({ domCache, innerHeight, innerWidth, innerX, innerY }) => [{\n            [refs.innerPart]: [, , { width: innerWidth, height: innerHeight, x: innerX, y: innerY }],\n        }],\n    xp.createShadow,\n]",
              "type": {
                "text": "array"
              }
            },
            {
              "kind": "field",
              "name": "refs",
              "default": "{ svgElement: '', pathElements: '', innerPart: '', diamondBorderPart: '' }",
              "type": {
                "text": "object"
              }
            },
            {
              "kind": "field",
              "name": "mainTemplate",
              "default": "html `\r\n<style>\r\n    :host[hidden]{\r\n        display:none;\r\n    }\r\n    :host{\r\n        display:block;\r\n    } \r\n</style>\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" width={{width}} height={{height}}>\r\n    <path part=diamond-fill \r\n        style=\"fill:#ccff00;stroke:none\" />\r\n    <path part=diamond-border \r\n        style=\"fill:none;stroke:#000000;stroke-linejoin:round;\" />\r\n    <g>\r\n        <foreignObject part=inner>\r\n            <slot></slot>\r\n        </foreignObject>\r\n    </g>\r\n</svg>\r\n`"
            },
            {
              "kind": "field",
              "name": "reactor",
              "default": "new xp.RxSuppl(this, [{\n            rhsType: Array,\n            ctor: DOMKeyPEA,\n        }])"
            },
            {
              "kind": "method",
              "name": "onPropChange",
              "parameters": [
                {
                  "name": "n"
                },
                {
                  "name": "prop"
                },
                {
                  "name": "nv"
                }
              ]
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels wide the figure should be.",
              "name": "width",
              "default": "800",
              "kind": "field"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels high the figure should be.",
              "name": "height",
              "default": "300",
              "kind": "field"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Width of border of figure.",
              "name": "strokeWidth",
              "default": "5",
              "kind": "field"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels left edge of inner content should be set to.",
              "name": "innerX",
              "default": "300",
              "kind": "field"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels top edge of inner content should be set to.",
              "name": "innerY",
              "default": "100",
              "kind": "field"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels wide the inner content should be provided.",
              "name": "innerWidth",
              "default": "200",
              "kind": "field"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels high the inner content should be provided.",
              "name": "innerHeight",
              "default": "100",
              "kind": "field"
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels wide the figure should be.",
              "name": "width",
              "default": "800"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels high the figure should be.",
              "name": "heigh",
              "default": "300"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Width of border of figure.",
              "name": "stroke-width",
              "default": "5"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels left edge of inner content should be set to.",
              "name": "inner-x",
              "default": "300"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels top edge of inner content should be set to.",
              "name": "inner-y",
              "default": "300"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels wide the inner content should be provided.",
              "name": "inner-width",
              "default": "200"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels high the inner content should be provided.",
              "name": "inner-height",
              "default": "100"
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "xtal-fig-diamond",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "XtalFigDiamond",
          "declaration": {
            "name": "XtalFigDiamond",
            "module": "xtal-fig-diamond.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "xtal-fig-diamond.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "XtalFigDiamond",
          "cssParts": [
            {
              "description": "path element that fills in the diamond",
              "name": "diamond-fill"
            },
            {
              "description": "path element that adds a border to the diamond",
              "name": "diamond-border"
            },
            {
              "description": "= foreignObject element inside of which slot goes",
              "name": "inner"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "is",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'xtal-fig-diamond'"
            },
            {
              "kind": "field",
              "name": "self",
              "default": "this"
            },
            {
              "kind": "field",
              "name": "propActions",
              "default": "[\r\n    xp.manageMainTemplate,\r\n    ({domCache, width, height}: X) => [{\r\n        [refs.svgElement]: [,,{width:width, height: height}]\r\n    }],\r\n    ({domCache, width, strokeWidth, height}: X) => [{\r\n        [refs.pathElements]:  [,, {d: `M ${width / 2},${strokeWidth} L ${strokeWidth},${height / 2} L ${width / 2},${height-strokeWidth} L ${width - strokeWidth},${height / 2} L ${width / 2},${strokeWidth} z`,}],\r\n    }],\r\n    ({domCache, strokeWidth}: X) => [{\r\n        [refs.diamondBorderPart]: [{style:{strokeWidth:strokeWidth}}],\r\n    }],\r\n    ({domCache, innerHeight, innerWidth, innerX, innerY}: X) => [{\r\n        [refs.innerPart]: [,,{width: innerWidth, height: innerHeight, x: innerX, y: innerY}],\r\n    }],\r\n    xp.createShadow,\r\n]"
            },
            {
              "kind": "field",
              "name": "refs",
              "default": "{svgElement: '', pathElements: '', innerPart: '', diamondBorderPart: ''}",
              "type": {
                "text": "object"
              }
            },
            {
              "kind": "field",
              "name": "mainTemplate",
              "default": "html`\r\n<style>\r\n    :host[hidden]{\r\n        display:none;\r\n    }\r\n    :host{\r\n        display:block;\r\n    } \r\n</style>\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" width={{width}} height={{height}}>\r\n    <path part=diamond-fill \r\n        style=\"fill:#ccff00;stroke:none\" />\r\n    <path part=diamond-border \r\n        style=\"fill:none;stroke:#000000;stroke-linejoin:round;\" />\r\n    <g>\r\n        <foreignObject part=inner>\r\n            <slot></slot>\r\n        </foreignObject>\r\n    </g>\r\n</svg>\r\n`"
            },
            {
              "kind": "field",
              "name": "reactor",
              "type": {
                "text": "IReactor"
              },
              "default": "new xp.RxSuppl(this, [{\r\n        rhsType: Array,\r\n        ctor: DOMKeyPEA,\r\n    }])"
            },
            {
              "kind": "method",
              "name": "onPropChange",
              "parameters": [
                {
                  "name": "n",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "prop",
                  "type": {
                    "text": "PropDef"
                  }
                },
                {
                  "name": "nv",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels wide the figure should be.",
              "name": "width",
              "default": "800",
              "kind": "field"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels high the figure should be.",
              "name": "height",
              "default": "300",
              "kind": "field"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Width of border of figure.",
              "name": "strokeWidth",
              "default": "5",
              "kind": "field"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels left edge of inner content should be set to.",
              "name": "innerX",
              "default": "300",
              "kind": "field"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels top edge of inner content should be set to.",
              "name": "innerY",
              "default": "100",
              "kind": "field"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels wide the inner content should be provided.",
              "name": "innerWidth",
              "default": "200",
              "kind": "field"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels high the inner content should be provided.",
              "name": "innerHeight",
              "default": "100",
              "kind": "field"
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels wide the figure should be.",
              "name": "width",
              "default": "800"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels high the figure should be.",
              "name": "heigh",
              "default": "300"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Width of border of figure.",
              "name": "stroke-width",
              "default": "5"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels left edge of inner content should be set to.",
              "name": "inner-x",
              "default": "300"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels top edge of inner content should be set to.",
              "name": "inner-y",
              "default": "300"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels wide the inner content should be provided.",
              "name": "inner-width",
              "default": "200"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels high the inner content should be provided.",
              "name": "inner-height",
              "default": "100"
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "xtal-fig-diamond",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "XtalFigDiamond",
          "declaration": {
            "name": "XtalFigDiamond",
            "module": "xtal-fig-diamond.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "xtal-fig-parallelogram.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "XtalFigParallelogram",
          "cssParts": [
            {
              "description": "path element that fills in the parallelogram",
              "name": "para-fill"
            },
            {
              "description": "path element that provides border for parallelogram",
              "name": "para-border"
            },
            {
              "description": "foreignObject that hosts the inner slot content",
              "name": "inner"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "is",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'xtal-fig-parallelogram'"
            },
            {
              "kind": "field",
              "name": "self",
              "default": "this"
            },
            {
              "kind": "field",
              "name": "propActions",
              "default": "[\n    xp.manageMainTemplate,\n    ({ domCache, width, height }) => [{\n            [refs.svgElement]: [, , { width: width, height: height }]\n        }],\n    ({ slant, strokeWidth, width, height, self }) => {\n        self.hOffset = width * Math.sin(Math.PI * slant / 180) + strokeWidth;\n    },\n    ({ domCache, width, strokeWidth, height, slant, hOffset }) => [{\n            [refs.pathElements]: [, , { d: `M ${hOffset},${strokeWidth} L ${width - strokeWidth},${strokeWidth} L ${width - hOffset},${height - strokeWidth} L ${strokeWidth},${height - strokeWidth} L ${hOffset},${strokeWidth} z` }],\n        }],\n    ({ domCache, strokeWidth }) => [{\n            [refs.paraBorderPart]: [{ style: { strokeWidth: strokeWidth } }],\n        }],\n    ({ domCache, innerHeight, innerWidth, innerX, innerY }) => [{\n            [refs.innerPart]: [, , { width: innerWidth, height: innerHeight, x: innerX, y: innerY }],\n        }],\n    xp.createShadow,\n]",
              "type": {
                "text": "array"
              }
            },
            {
              "kind": "field",
              "name": "refs",
              "default": "{ svgElement: '', pathElements: '', innerPart: '', paraBorderPart: '' }",
              "type": {
                "text": "object"
              }
            },
            {
              "kind": "field",
              "name": "mainTemplate",
              "default": "html `\r\n<style>\r\n    :host[hidden]{\r\n        display:none;\r\n    }\r\n    :host{\r\n        display:block;\r\n    } \r\n\r\n</style>\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" width={{width}} height={{height}}>\r\n    <path part=para-fill \r\n        d={{path}} \r\n        style=\"fill:#ccff00;stroke:none\" />\r\n    <path part=para-border \r\n        d={{path}} \r\n        style=\"fill:none;stroke:#000000;stroke-width:{{strokeWidth}};stroke-linejoin:round;\" />\r\n    <g>\r\n        <foreignObject part=inner width=\"{{innerWidth}}\" height=\"{{innerHeight}}\" x=\"{{innerX}}\" y=\"{{innerY}}\">\r\n            <slot></slot>\r\n        </foreignObject>\r\n    </g>\r\n    \r\n\r\n</svg>\r\n`"
            },
            {
              "kind": "field",
              "name": "reactor",
              "default": "new xp.RxSuppl(this, [{\n            rhsType: Array,\n            ctor: DOMKeyPEA,\n        }])"
            },
            {
              "kind": "method",
              "name": "onPropChange",
              "parameters": [
                {
                  "name": "n"
                },
                {
                  "name": "prop"
                },
                {
                  "name": "nv"
                }
              ]
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels wide the figure should be.",
              "name": "width",
              "default": "800",
              "kind": "field"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels high the figure should be.",
              "name": "height",
              "default": "300",
              "kind": "field"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Width of border of figure.",
              "name": "strokeWidth",
              "default": "5",
              "kind": "field"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of degrees parallelogram should slant.",
              "name": "slant",
              "default": "30",
              "kind": "field"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels left edge of inner content should be set to.",
              "name": "innerX",
              "default": "300",
              "kind": "field"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels top edge of inner content should be set to.",
              "name": "innerY",
              "default": "100",
              "kind": "field"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels wide the inner content should be provided.",
              "name": "innerWidth",
              "default": "200",
              "kind": "field"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels high the inner content should be provided.",
              "name": "innerHeight",
              "default": "100",
              "kind": "field"
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels wide the figure should be.",
              "name": "width",
              "default": "800"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels high the figure should be.",
              "name": "heigh",
              "default": "300"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Width of border of figure.",
              "name": "stroke-width",
              "default": "5"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of degrees parallelogram should slant.",
              "name": "slant",
              "default": "30"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels left edge of inner content should be set to.",
              "name": "inner-x",
              "default": "300"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels top edge of inner content should be set to.",
              "name": "inner-y",
              "default": "300"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels wide the inner content should be provided.",
              "name": "inner-width",
              "default": "200"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels high the inner content should be provided.",
              "name": "inner-height",
              "default": "100"
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "xtal-fig-parallelogram",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "XtalFigParallelogram",
          "declaration": {
            "name": "XtalFigParallelogram",
            "module": "xtal-fig-parallelogram.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "xtal-fig-parallelogram.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "XtalFigParallelogram",
          "cssParts": [
            {
              "description": "path element that fills in the parallelogram",
              "name": "para-fill"
            },
            {
              "description": "path element that provides border for parallelogram",
              "name": "para-border"
            },
            {
              "description": "foreignObject that hosts the inner slot content",
              "name": "inner"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "is",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'xtal-fig-parallelogram'"
            },
            {
              "kind": "field",
              "name": "self",
              "default": "this"
            },
            {
              "kind": "field",
              "name": "propActions",
              "default": "[\r\n    xp.manageMainTemplate,\r\n    ({domCache, width, height}: X) => [{\r\n        [refs.svgElement]: [,,{width:width, height: height}]\r\n    }],\r\n    ({slant, strokeWidth, width, height, self}: X) => {\r\n        self.hOffset = width * Math.sin(Math.PI * slant / 180) + strokeWidth;\r\n    },\r\n    ({domCache, width, strokeWidth, height, slant, hOffset}: X) => [{\r\n        [refs.pathElements]:  [,, {d: `M ${hOffset},${strokeWidth} L ${width - strokeWidth},${strokeWidth} L ${width - hOffset},${height - strokeWidth} L ${strokeWidth},${height - strokeWidth} L ${hOffset},${strokeWidth} z`}],\r\n    }],\r\n    ({domCache, strokeWidth}: X) => [{\r\n        [refs.paraBorderPart]: [{style:{strokeWidth:strokeWidth}}],\r\n    }],\r\n    ({domCache, innerHeight, innerWidth, innerX, innerY}: X) => [{\r\n        [refs.innerPart]: [,,{width: innerWidth, height: innerHeight, x: innerX, y: innerY}],\r\n    }],\r\n    xp.createShadow,\r\n]"
            },
            {
              "kind": "field",
              "name": "refs",
              "default": "{svgElement: '', pathElements: '', innerPart: '', paraBorderPart: ''}",
              "type": {
                "text": "object"
              }
            },
            {
              "kind": "field",
              "name": "mainTemplate",
              "default": "html`\r\n<style>\r\n    :host[hidden]{\r\n        display:none;\r\n    }\r\n    :host{\r\n        display:block;\r\n    } \r\n\r\n</style>\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" width={{width}} height={{height}}>\r\n    <path part=para-fill \r\n        d={{path}} \r\n        style=\"fill:#ccff00;stroke:none\" />\r\n    <path part=para-border \r\n        d={{path}} \r\n        style=\"fill:none;stroke:#000000;stroke-width:{{strokeWidth}};stroke-linejoin:round;\" />\r\n    <g>\r\n        <foreignObject part=inner width=\"{{innerWidth}}\" height=\"{{innerHeight}}\" x=\"{{innerX}}\" y=\"{{innerY}}\">\r\n            <slot></slot>\r\n        </foreignObject>\r\n    </g>\r\n    \r\n\r\n</svg>\r\n`"
            },
            {
              "kind": "field",
              "name": "reactor",
              "type": {
                "text": "IReactor"
              },
              "default": "new xp.RxSuppl(this, [{\r\n        rhsType: Array,\r\n        ctor: DOMKeyPEA,\r\n    }])"
            },
            {
              "kind": "method",
              "name": "onPropChange",
              "parameters": [
                {
                  "name": "n",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "prop",
                  "type": {
                    "text": "PropDef"
                  }
                },
                {
                  "name": "nv",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels wide the figure should be.",
              "name": "width",
              "default": "800",
              "kind": "field"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels high the figure should be.",
              "name": "height",
              "default": "300",
              "kind": "field"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Width of border of figure.",
              "name": "strokeWidth",
              "default": "5",
              "kind": "field"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of degrees parallelogram should slant.",
              "name": "slant",
              "default": "30",
              "kind": "field"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels left edge of inner content should be set to.",
              "name": "innerX",
              "default": "300",
              "kind": "field"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels top edge of inner content should be set to.",
              "name": "innerY",
              "default": "100",
              "kind": "field"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels wide the inner content should be provided.",
              "name": "innerWidth",
              "default": "200",
              "kind": "field"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels high the inner content should be provided.",
              "name": "innerHeight",
              "default": "100",
              "kind": "field"
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels wide the figure should be.",
              "name": "width",
              "default": "800"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels high the figure should be.",
              "name": "heigh",
              "default": "300"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Width of border of figure.",
              "name": "stroke-width",
              "default": "5"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of degrees parallelogram should slant.",
              "name": "slant",
              "default": "30"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels left edge of inner content should be set to.",
              "name": "inner-x",
              "default": "300"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels top edge of inner content should be set to.",
              "name": "inner-y",
              "default": "300"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels wide the inner content should be provided.",
              "name": "inner-width",
              "default": "200"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "Number of pixels high the inner content should be provided.",
              "name": "inner-height",
              "default": "100"
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "xtal-fig-parallelogram",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "XtalFigParallelogram",
          "declaration": {
            "name": "XtalFigParallelogram",
            "module": "xtal-fig-parallelogram.ts"
          }
        }
      ]
    }
  ]
}
